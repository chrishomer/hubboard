Connecting to github with omniauth

At thredUP we use github issues for tracking problems with thredup.com.  It's good and light weight enough that you don't spend half your time managing your bug tracker rather than writing tests and fixing bugs.

But it's kind of a pain to see the whole picture of issues, what people are working on and what is unassigned.  So I wanted to see if the API would let me pull the issues so I can display them on our own view.

Here's how I setup the link to github and authorized it to pull in github issues via a restful "issues controller".

We'll use this as an opportunity to checkout rails 3.1.0.rc1 and in a future post, coffeescript & backbone js.

Starting point is a new shell app created with:

    rails new hubboard -T
    rm public/index.html
    rm app/assets/images/rails.png

This will skip generating tests so we can use RSpec instead if we decided to write tests for this app.  Initially, though, I plan on doing some cowboy coding.

The first thing I generally do is add a few of my basic gems that I like in a new project:

**** LINK TO Gemfile ****

Configure the gemset for this app:

    echo "rvm use 1.9.2@hub --create" >> .rvmrc
    cd ..; cd hubboard
    # allow the new .rvmrc file
    bundle

Configure compass (using sass) for a rails 3.1.0 app:

    compass init rails hubboard -s expanded --sass-dir app/assets/stylesheets --css-dir public/assets --images-dir app/assets/images --javascripts-dir public/assets --syntax sass
    
Add some basics to the gitignore:
    
    # paste as one command
    echo ".rvmrc
    public/assets/*
    *DS_Store
    "  >> .gitignore

Now that we've got some "piping" in place, the first thing I like to do is create an app root page:

    rails g controller home index
    
    # config/routes.rb
    Hubboard::Application.routes.draw do
      root :to => 'home#index'
    end

Then a quick test to confirm all is well:

    unicorn_rails
